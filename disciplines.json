{
	"disciplines": "<p>\n          <h4>\n            <u>Single Responsibility Principle:</u>\n          </h4>\n        </p>\n        <p>A class should only have one reason to change (Swiss-army knife)\n        </p>\n        <p>\n          <h4>\n            <u>Open-Closed Principle:</u>\n          </h4>\n        </p>\n        <p>\n          <ul>\n            <li>Open for extension, but closed for modification (Hardware store saw blades)</li>\n          </ul>\n          <p>\n          </p>\n          <h4>\n            <u>Liskov Substitution Principle:</u>\n          </h4>\n        </p>\n        <p>\n          <ul>\n            <li>Replace any instance of a parent class with an instance of one of itâ€™s children without creating any unexpected\n              or incorrect behaviours (Lenovo Laptop Charger)</li>\n          </ul>\n        </p>\n        <p>aka, Design by Contract</p>\n        <p>\n          <h4>\n            <u>Interface Segregation:</u>\n          </h4>\n        </p>\n        <p>\n          <ul>\n            <li>Client should not be forced to depend upon interfaces they do not use (CMS User class and needs Moderator)</li>\n          </ul>\n        </p>\n        <p>\n          <h4>\n            <u>Dependency Inversion:</u>\n          </h4>\n        </p>\n        <p>High Level Classes should not depend upon low-level classes. Both should depend upon abstractions (Low-level disk\n          and network IO. High-level business logic)\n          <p>"
}